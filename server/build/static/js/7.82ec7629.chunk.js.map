{"version":3,"sources":["scenes/playground/styles.jsx","components/core-nemu/misc-tools/Terminal.jsx","components/core-nemu/misc-tools/CodeOutput.jsx","components/core-nemu/misc-tools/MiscellaneousTool.jsx","components/core-nemu/visual-code/Blockly.jsx","components/core-nemu/misc-tools/buttons/DownloadButton.jsx","components/core-nemu/misc-tools/buttons/ShareButton.jsx","store/project/projectAction.jsx","components/core-nemu/misc-tools/buttons/CompileButtonHook.jsx","helper/hooks/envHook.js","components/core-nemu/misc-tools/ToolsButton.jsx","scenes/playground/Playground.jsx"],"names":["styles","theme","root","flexGrow","paper","textAlign","color","palette","text","secondary","Terminal","state","uid","localStorage","getItem","isBlocklyLoaded","webconsolePath","onReady","setState","link","config","headers","proxy","port","command","props","rxs","domain","isDevelopmentMode","data","webConsole1","webConsole2","webConsole3","rwAccess","code","axios","post","then","res","err","onAxiosRejected","output","result","messages","isLoading","handleGetOutput","catch","console","log","this","heightDiv","custHeightRoot","attributes","src","width","height","style","backgroundColor","container","spacing","justify","alignItems","position","zIndex","handleReady","Component","connect","CodeOutput","Prism","highlightAll","custHeight","className","withStyles","rightIcon","marginLeft","unit","useState","value","setValue","handleChange","e","v","ReactGA","event","category","action","classes","custData","heightCodeOutput","heightTerminalDiv","styleRoot","openInCourse","useEffect","alignContent","item","xs","onChange","centered","icon","Blockly","setIsBlocklyLoaded","window","location","origin","direction","background","thickness","size","marginRight","variant","role","aria-label","handleReceiveMessage","getCode","DownloadButton","handleClick","file","Blob","type","document","createElement","href","URL","createObjectURL","body","appendChild","download","click","removeChild","Fragment","onClick","fullWidth","ShareButton","buttonClick","toastId","isToastOpen","openDialog","isVerified","toEmail","fromEmail","toast","isActive","autoClose","onClose","rxd","playgroundCodeUpdate","xmlCode","onClickHandler","closeDialogHandler","recaptchaHandler","submitHandler","dataPost","verifiedComp","disabled","length","inputChangeHandle","target","id","open","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","align","autoFocus","margin","label","required","multiline","sitekey","render","verifyCallback","hidden","firebase","auth","dispatch","getState","getFirebase","getFirestore","collection","doc","update","playground","fabButton","top","left","right","fullScreen","showAsButton","getOutput","setDomain","getDomain","useCallback","hostLocation","host","split","useEnv","setOpen","setIsLoading","setOutput","error","setError","CancelToken","source","axiosCancelToken","setAxiosCancelToken","handleCompileBtn","cancelToken","token","language","script","finally","handleClose","renderCompileCode","renderButtonOption","justifyContent","cancel","title","placement","ToolsButton","marginTop","withWidth","setCode","isNewUser","showSteps","undefined","setItem","stepsEnabled","setStepsEnabled","enabled","steps","element","intro","initialStep","onExit","md","display","minHeight","flexDirection","isWidthUp","paddingTop","paddingBottom","textDecoration","rel"],"mappings":"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","file":"static/js/7.82ec7629.chunk.js","sourcesContent":["const styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n});\r\n\r\nexport default styles;","import React, { Component, Fragment } from 'react';\r\nimport IframeComm from 'react-iframe-comm';\r\nimport { Grid, LinearProgress } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nclass Terminal extends Component {\r\n    state = {\r\n        uid: localStorage.getItem(\"nemu-uid\"),\r\n        isBlocklyLoaded: false\r\n    }\r\n\r\n    webconsolePath = 'http://45.64.99.168/webconsole/';\r\n\r\n    onReady = () => {\r\n\r\n        this.setState({\r\n            isBlocklyLoaded: true\r\n        });\r\n\r\n        const { uid } = this.state;\r\n\r\n        const link = this.webconsolePath;\r\n        // const link = (this.props.rxs.domain.isDevelopmentMode) ?\r\n        //     this.webconsolePath :\r\n        //     `http://localhost:80/nemu-dev/nemu/public/webconsole/` :\r\n        //     `${window.location.origin}/webconsole/`;\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            proxy: { port: 80 }\r\n        };\r\n\r\n        // soon, change the hostname in data.webConsole to username of user\r\n        const command = [\r\n            (\"IF exist \" + uid + \"/nul ( echo \" + uid + \" exists ) ELSE (mkdir \" + uid + \")\"),\r\n            (\"g++ main.cpp -o main\"),\r\n            (this.props.rxs.domain.isDevelopmentMode ? \"main\" : \"./main\")\r\n        ];\r\n        const data = {\r\n            webConsole1: {\r\n                \"jsonrpc\": \"2.0\",\r\n                \"method\": \"run\",\r\n                \"params\": [\"NO_LOGIN\", { \"user\": \"\", \"hostname\": \"arrokh\", \"path\": \"\" }, command[0]]\r\n            },\r\n            webConsole2: {\r\n                \"jsonrpc\": \"2.0\",\r\n                \"method\": \"run\",\r\n                \"params\": [\"NO_LOGIN\", { \"user\": \"\", \"hostname\": \"arrokh\", \"path\": \"\" }, command[1]]\r\n            },\r\n            webConsole3: {\r\n                \"jsonrpc\": \"2.0\",\r\n                \"method\": \"run\",\r\n                \"params\": [\"NO_LOGIN\", { \"user\": \"\", \"hostname\": \"arrokh\", \"path\": \"\" }, command[2]],\r\n                \"id\": uid\r\n            },\r\n            rwAccess: { \"uid\": uid, \"code\": this.props.code }\r\n        }\r\n        axios\r\n            .post(link + \"webconsole.php\", data.webConsole1, config)\r\n            .then(res => {\r\n                return axios.post(link + \"rw-access/index.php\", data.rwAccess, config);\r\n            }, err => this.onAxiosRejected(err, \"In phase 1 : \"))\r\n            .then(res => {\r\n                return axios.post(link + \"webconsole.php?uid=\" + uid, data.webConsole2, config);\r\n            }, err => this.onAxiosRejected(err, \"In phase 2 : \"))\r\n            .then(res => {\r\n                return axios.post(link + \"webconsole.php?uid=\" + uid, data.webConsole3, config);\r\n            }, err => this.onAxiosRejected(err, \"In phase 3 : \"))\r\n            .then(res => {\r\n                this.setState({\r\n                    output: res.data.result.output,\r\n                    messages: \"Successfully compiled your code :)\",\r\n                    isLoading: false\r\n                });\r\n                this.handleGetOutput(res.data.result.output);\r\n            }, err => this.onAxiosRejected(err, \"In phase 4 : \"))\r\n            .catch(err => {\r\n                console.log(\"CompileButton::handleCompileBtn->\" + err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { uid } = this.state;\r\n        // const height = this.props.custHeight ? this.props.custHeight : \"72.1vh\";\r\n        const heightDiv = this.props.custHeightRoot ? this.props.custHeightRoot : \"70vh\";\r\n        const attributes = {\r\n            src: this.webconsolePath + \"/webconsole.php?uid=\" + uid,\r\n            // src: window.location.origin + \"/webconsole/webconsole.php?uid=\" + uid,\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        }\r\n\r\n        /*\r\n        const renderData = !(this.props.rxs.domain.isDevelopmentMode) ? (\r\n            <Grid\r\n                style={{ height: height }}\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Typography component=\"p\" style={{ color: 'white' }}>\r\n                    Oops, it doesn't work now. Try again later.\r\n                </Typography>\r\n            </Grid>\r\n        ) : (\r\n                <Fragment>\r\n                    {\r\n                        !this.state.isBlocklyLoaded ? (\r\n                            <Grid container spacing={0} justify={\"center\"} alignItems=\"center\" style={{\r\n                                height: \"100%\",\r\n                                position: \"fixed\",\r\n                                zIndex: 3\r\n                            }}>\r\n                                <LinearProgress />\r\n                            </Grid>\r\n                        ) : null\r\n                    }\r\n                    <IframeComm\r\n                        attributes={attributes}\r\n                        handleReady={this.onReady}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        */\r\n\r\n        return (\r\n            <div style={{ backgroundColor: 'black', height: heightDiv }}>\r\n                {/* {renderData} */}\r\n                <Fragment>\r\n                    {\r\n                        !this.state.isBlocklyLoaded ? (\r\n                            <Grid container spacing={0} justify={\"center\"} alignItems=\"center\" style={{\r\n                                height: \"100%\",\r\n                                position: \"fixed\",\r\n                                zIndex: 3\r\n                            }}>\r\n                                <LinearProgress />\r\n                            </Grid>\r\n                        ) : null\r\n                    }\r\n                    <IframeComm\r\n                        attributes={attributes}\r\n                        handleReady={this.onReady}\r\n                    />\r\n                </Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        rxs: {\r\n            domain: state.domain,\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Terminal);","import React, {Component} from 'react';\r\nimport Prism from 'prismjs';\r\nimport \"../../../css/prism.css\";\r\n\r\nclass CodeOutput extends Component {\r\n\r\n    componentDidMount() {\r\n        Prism.highlightAll();\r\n    }\r\n\r\n    render() {\r\n        const {code} = this.props;\r\n        const height = this.props.custHeight ? this.props.custHeight : \"65vh\";\r\n        return (\r\n            <pre style={{height: height}}>\r\n                <code className=\"language-cpp\">\r\n                    {code}\r\n                </code>\r\n            </pre>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeOutput;","import React, {useEffect, useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {Icon} from '@material-ui/core';\r\nimport Terminal from './Terminal';\r\nimport CodeOutput from './CodeOutput'\r\nimport ReactGA from \"react-ga\";\r\n\r\nconst MiscellaneousTool = (props) => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (e, v) => {\r\n        setValue(v);\r\n\r\n        ReactGA.event({\r\n            category: 'Miscellaneous tool',\r\n            action: 'Opening ' + (v === 0 ? 'Code' : 'Console') + ' tab'\r\n        });\r\n    };\r\n\r\n    const {classes, code, openInCourse} = props;\r\n    let custData = {\r\n        heightCodeOutput: null,\r\n        heightTerminalDiv: null,\r\n        styleRoot: {\r\n            height: ''\r\n        }\r\n    }\r\n\r\n    if (openInCourse) {\r\n        custData.heightCodeOutput = \"100vh\";\r\n        custData.heightTerminalDiv = \"73vh\";\r\n        custData.styleRoot.height = \"72vh\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (value === 1)\r\n            handleChange(null, 0); // eslint-disable-next-line\r\n    }, [code]);\r\n\r\n    return (\r\n        <div className={classes.root} style={custData.styleRoot}>\r\n            <Grid container className={classes.container} justify={\"center\"}\r\n                  alignItems={\"center\"} alignContent={\"center\"}>\r\n                <Grid item xs={11}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs value={value} onChange={handleChange} centered>\r\n                            <Tab icon={<Icon>code</Icon>}/>\r\n                            <Tab icon={<Icon>dvr</Icon>}/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    {value === 0 && <CodeOutput code={code} custHeight={custData.heightCodeOutput}/>}\r\n                    {value === 1 && <Terminal code={code} custHeightRoot={custData.heightTerminalDiv}\r\n                                              custHeight={custData.heightCodeOutput}/>}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    container: {\r\n        height: '100%'\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing.unit,\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(MiscellaneousTool);","import React, {Fragment, useState} from 'react';\r\nimport IframeComm from 'react-iframe-comm';\r\nimport {CircularProgress, Typography} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst Blockly = (props) => {\r\n    const [isBlocklyLoaded, setIsBlocklyLoaded] = useState(false);\r\n\r\n    const {custHeight} = props;\r\n\r\n    const attributes = {\r\n        src: window.location.origin + \"/blockly/blockly.html\",\r\n        width: \"100%\",\r\n        height: custHeight ? custHeight : \"100%\"\r\n    };\r\n\r\n    const onReceiveMessage = (e) => {\r\n        if (e.data.code)\r\n            props.getCode(e.data.code);\r\n    };\r\n\r\n    const onReady = () => {\r\n        setIsBlocklyLoaded(true);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                !isBlocklyLoaded ? (\r\n                    <Grid container direction={\"column\"} spacing={0} justify={\"center\"} alignItems=\"center\" style={{\r\n                        height: \"100%\",\r\n                        background: \"rgba(29, 39, 49, 0.9)\",\r\n                        position: \"fixed\",\r\n                        zIndex: 3\r\n                    }}>\r\n                        <CircularProgress thickness={8} size={75} style={{marginRight: 20}}/>\r\n                        <Typography variant={\"display1\"} style={{color: 'white'}}>\r\n                            <br/>\r\n                            <span role=\"img\" aria-label=\"Man Technologist\">👨‍💻</span> Preparing The Environment <span role=\"img\" aria-label=\"Woman Technologist\">👩‍💻</span>\r\n                        </Typography>\r\n                    </Grid>\r\n                ) : null\r\n            }\r\n            <IframeComm\r\n                attributes={attributes}\r\n                handleReady={onReady}\r\n                handleReceiveMessage={onReceiveMessage}\r\n            />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Blockly;","import React, { Component } from 'react';\r\nimport { Icon, Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ReactGA from \"react-ga\";\r\n\r\nclass DownloadButton extends Component {\r\n\r\n    handleClick = () => {\r\n        ReactGA.event({\r\n            category: 'Miscellaneous tool',\r\n            action: 'Download code'\r\n        });\r\n\r\n        const { code } = this.props;\r\n\r\n        const file = new Blob([code], { type: 'text/plain' });\r\n        const link = document.createElement('a');\r\n\r\n        link.href = URL.createObjectURL(file);\r\n        document.body.appendChild(link);\r\n        link.download = \"main.cpp\"\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Button onClick={this.handleClick} variant=\"contained\" color=\"default\" fullWidth >\r\n                    Download\r\n                    <Icon className={classes.rightIcon}>save_alt</Icon>\r\n                </Button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    rightIcon: {\r\n        marginLeft: theme.spacing.unit,\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(DownloadButton);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { Icon, Button, Grid } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { playgroundCodeUpdate } from '../../../../store/project/projectAction';\r\nimport Recaptcha from \"react-recaptcha\";\r\nimport axios from 'axios';\r\nimport ReactGA from \"react-ga\";\r\n\r\nclass ShareButton extends Component {\r\n    state = {\r\n        buttonClick: false,\r\n        toastId: null,\r\n        isToastOpen: false,\r\n        openDialog: false,\r\n        isVerified: false,\r\n        toEmail: \"\",\r\n        fromEmail: \"\",\r\n        messages: \"\",\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (toast.isActive(\"sync-button\"))\r\n            return;\r\n\r\n        this.setState({ isToastOpen: true });\r\n\r\n        toast(\"Synchronizing...\", {\r\n            toastId: \"sync-button\",\r\n            autoClose: 1500,\r\n            onClose: () => { this.setState({ isToastOpen: false }) }\r\n        })\r\n\r\n        this.props.rxd.playgroundCodeUpdate({\r\n            code: this.props.code,\r\n            xmlCode: \"empty\"\r\n        });\r\n    }\r\n\r\n    onClickHandler = () => {\r\n        ReactGA.event({\r\n            category: 'Miscellaneous tool',\r\n            action: 'Share code by submited email'\r\n        });\r\n\r\n        this.setState({ openDialog: true })\r\n    }\r\n\r\n    closeDialogHandler = () => {\r\n        this.setState({\r\n            openDialog: false,\r\n            buttonClick: false,\r\n            isVerified: false,\r\n        });\r\n    }\r\n\r\n    recaptchaHandler = () => {\r\n        this.setState({ isVerified: true });\r\n    }\r\n\r\n    submitHandler = () => {\r\n\r\n        this.setState({ isToastOpen: true });\r\n\r\n        toast(\"Sending...\", {\r\n            toastId: \"sync-button\",\r\n            autoClose: 10000,\r\n            onClose: () => { this.setState({ isToastOpen: false }) }\r\n        })\r\n\r\n        this.setState({ buttonClick: true });\r\n        const dataPost = {\r\n            fromEmail: this.state.fromEmail,\r\n            toEmail: this.state.toEmail,\r\n            messages: this.state.messages,\r\n            code: this.props.code\r\n        }\r\n\r\n\r\n        const link = (this.props.rxs.domain.isDevelopmentMode) ?\r\n            `http://localhost:80/nemu-dev/nemu/public/share/index.php` :\r\n            `${window.location.origin}/share/index.php`;\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': ['application/json']\r\n            }\r\n        };\r\n\r\n        axios.post(link, dataPost, config)\r\n            .then(res => {\r\n                this.setState({\r\n                    openDialog: false,\r\n                    buttonClick: false,\r\n                });\r\n\r\n                toast(\"Done :)\", {\r\n                    toastId: \"sync-button\",\r\n                    autoClose: 2000,\r\n                    onClose: () => { this.setState({ isToastOpen: false }) }\r\n                })\r\n            });\r\n    }\r\n\r\n    verifiedComp = () => {\r\n        if (this.state.isVerified) {\r\n            return (\r\n                <Button\r\n                    variant={'contained'}\r\n                    onClick={this.submitHandler}\r\n                    color=\"primary\"\r\n                    disabled={(this.state.fromEmail.length < 1 || this.state.toEmail.length < 1 || this.state.messages.length < 1) || this.state.buttonClick}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    inputChangeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Button\r\n                    onClick={this.onClickHandler}\r\n                    variant=\"contained\"\r\n                    color=\"default\"\r\n                    fullWidth\r\n                >\r\n                    Share\r\n                    <Icon className={classes.rightIcon}>share</Icon>\r\n                </Button>\r\n                <Dialog\r\n                    open={this.state.openDialog}\r\n                    onClose={this.closeDialogHandler}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    disableBackdropClick\r\n                    disableEscapeKeyDown\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\" align=\"center\">Let's share your project</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            NEMU ID will help you send your project throught email to anyone. Try it!\r\n                        </DialogContentText>\r\n                        <br />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"fromEmail\"\r\n                            label=\"Your email address\"\r\n                            type=\"fromEmail\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={this.inputChangeHandle}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"toEmail\"\r\n                            label=\"To\"\r\n                            type=\"toEmail\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={this.inputChangeHandle}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"messages\"\r\n                            label=\"Messages\"\r\n                            type=\"text\"\r\n                            multiline={true}\r\n                            required\r\n                            fullWidth\r\n                            onChange={this.inputChangeHandle}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems={'center'} style={{ textAlign: 'center' }} >\r\n                                <Grid item xs>\r\n                                    <Button onClick={this.closeDialogHandler} color=\"primary\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Recaptcha\r\n                                        sitekey=\"6LfsCqMUAAAAAMkS7ioQaTFV8AQ-H_Yd15nWihtt\"\r\n                                        render=\"explicit\"\r\n                                        verifyCallback={this.recaptchaHandler}\r\n                                        hidden={this.state.isVerified}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    {this.verifiedComp()}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    rightIcon: {\r\n        marginLeft: theme.spacing.unit,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        rxs: {\r\n            domain: state.domain,\r\n            uid: state.firebase.auth.uid\r\n        }\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        rxd: {\r\n            playgroundCodeUpdate: data => dispatch(playgroundCodeUpdate(data))\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(ShareButton));","export const playgroundCodeUpdate = (data) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const uid = getState().firebase.auth.uid;\r\n\r\n        const firestore = getFirestore();\r\n\r\n        firestore\r\n            .collection(\"users\")\r\n            .doc(uid)\r\n            .update({playground: data})\r\n            .then(res => {\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n            });\r\n    };\r\n}","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Button, Icon, Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText, Grid, Fab, Tooltip } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport ReactGA from \"react-ga\";\r\nimport { useEnv } from '../../../../helper/hooks/envHook';\r\n\r\n\r\nconst CompileButtonHook = (props) => {\r\n\r\n    const { classes, fullScreen, showAsButton, code, getOutput } = props;\r\n    const { domain } = useEnv();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [output, setOutput] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n    const [axiosCancelToken, setAxiosCancelToken] = useState(axios.CancelToken.source());\r\n\r\n    const handleCompileBtn = (e) => {\r\n        ReactGA.event({\r\n            category: 'Miscellaneous tool',\r\n            action: 'Compile code by button'\r\n        });\r\n\r\n        if (!domain) {\r\n            console.error(\"Domain is null\")\r\n            return;\r\n        }\r\n\r\n        setOpen(true);\r\n        setIsLoading(true);\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            cancelToken: axiosCancelToken.token\r\n        };\r\n\r\n        const data = {\r\n            language: \"cpp\",\r\n            script: code,\r\n        };\r\n        axios.post(`${domain}/execute/jdoodle`, data, config)\r\n            .then(res => {\r\n                setOutput(res.data.output);\r\n                handleGetOutput(output);\r\n            })\r\n            .catch(err => {\r\n                // setMessages('Something went wrong :(');\r\n                setError(err);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const handleGetOutput = (output) => {\r\n        if (getOutput) getOutput(output);\r\n    }\r\n\r\n    const handleAbort = () => {\r\n        setOpen(false);\r\n        axiosCancelToken.cancel();\r\n        setAxiosCancelToken(axios.CancelToken.source());\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        // setError(false);\r\n    };\r\n    useEffect(() => {\r\n        console.log(error);\r\n        return () => {\r\n        };\r\n    }, [error]);\r\n\r\n    const renderCompileCode = (isLoading) ? (\r\n        <DialogContentText>Compiling...</DialogContentText>\r\n    ) : (\r\n            <div>\r\n                <pre>\r\n                    <code className=\"language-cpp\">\r\n                        {/* {messages === \"\" ? output : messages} */}\r\n                        {output}\r\n                    </code>\r\n                </pre>\r\n            </div>\r\n        );\r\n\r\n    const renderButtonOption = (isLoading) ? (\r\n        <Button style={{ justifyContent: 'center' }} onClick={handleAbort} variant=\"contained\" color=\"secondary\">\r\n            Abort\r\n            </Button>\r\n    ) : (\r\n            <React.Fragment>\r\n                {/* {!error && messages === '' ? (\r\n                    <Button style={{ justifyContent: 'center' }} onClick={handleShow} color=\"primary\" variant=\"outlined\" >\r\n                        Show\r\n                    </Button>\r\n                ) : null} */}\r\n                <Button style={{ justifyContent: 'center', marginLeft: 15 }} onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n            </React.Fragment>\r\n        );\r\n\r\n    return (\r\n        <Fragment>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n                disableBackdropClick={(isLoading) ? true : false}\r\n                disableEscapeKeyDown={(isLoading) ? true : false}\r\n            >\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Terminal Output:\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <hr />\r\n                    {renderCompileCode}\r\n                    <hr />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        {renderButtonOption}\r\n\r\n                    </Grid>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {\r\n                showAsButton ? (\r\n                    <>\r\n                        <Button onClick={handleCompileBtn} variant=\"contained\" color=\"default\" fullWidth >\r\n                            Compile\r\n                            <Icon className={classes.rightIcon}>gavel</Icon>\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                        <Tooltip title=\"Run you code!\" placement=\"top\">\r\n                            <Fab onClick={handleCompileBtn} size=\"medium\" color=\"secondary\" aria-label=\"Add\" className={classes.fabButton}>\r\n                                <Icon>gavel</Icon>\r\n                            </Fab>\r\n                        </Tooltip>\r\n                    )\r\n            }\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst styles = theme => ({\r\n    rightIcon: {\r\n        marginLeft: theme.spacing.unit,\r\n    },\r\n    fabButton: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        top: -40,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        rxs: {\r\n            domain: state.domain,\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps)(CompileButtonHook));\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nexport const useEnv = () => {\r\n\r\n    const [domain, setDomain] = useState(null);\r\n\r\n\r\n    const getDomain = useCallback(\r\n        () => {\r\n            const port = 8080;\r\n            const hostLocation = window.location.host.split(\":\")[0];\r\n            if (hostLocation === \"localhost\")\r\n                setDomain(`http://${hostLocation}:${port}`);\r\n            else\r\n                setDomain(`https://${hostLocation}`);\r\n        }, []\r\n    );\r\n\r\n    useEffect(() => {\r\n        getDomain();\r\n        return () => {\r\n\r\n        };\r\n    }, [getDomain]);\r\n    return {\r\n        domain\r\n    };\r\n};","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n// import SyncButton from './buttons/SyncButton';\r\nimport DownloadButton from './buttons/DownloadButton';\r\nimport ShareButton from './buttons/ShareButton';\r\nimport CompileButtonHook from './buttons/CompileButtonHook';\r\n\r\nconst ToolsButton = (props) => {\r\n    const { code } = props;\r\n    return (\r\n        <Grid item xs={12} style={{marginTop:15}}>\r\n            <Grid container spacing={8}>\r\n                <Grid item xs={4}>\r\n                    <ShareButton code={code} />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <DownloadButton code={code} />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    {/* <CompileButton showAsButton={true} code={code} /> */}\r\n                    <CompileButtonHook showAsButton={true} code={code} />\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ToolsButton;","import React, { Fragment, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport styles from './styles';\r\nimport MiscellaneousTool from '../../components/core-nemu/misc-tools/MiscellaneousTool';\r\nimport Blockly from '../../components/core-nemu/visual-code/Blockly';\r\nimport ToolsButton from '../../components/core-nemu/misc-tools/ToolsButton';\r\n\r\nimport { Steps } from 'intro.js-react';\r\nimport 'intro.js/introjs.css';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst Playground = (props) => {\r\n    const [code, setCode] = useState(\"\");\r\n\r\n    const onVisualSpaceReady = () => {\r\n        console.log(\"ASD\");\r\n    }\r\n\r\n    const handleGetCode = code => {\r\n        setCode(code);\r\n    }\r\n\r\n\r\n    let isNewUser = localStorage.getItem(\"nemu-new-playground\");\r\n    let showSteps = true;\r\n    if (isNewUser === null || isNewUser === undefined) {\r\n        localStorage.setItem(\"nemu-new-playground\", \"true\");\r\n    } else {\r\n        showSteps = false;\r\n    }\r\n\r\n    const [stepsEnabled, setStepsEnabled] = useState(showSteps);\r\n    const initialStep = 0;\r\n    const steps = [\r\n        {\r\n            element: '.welcome-1',\r\n            intro: 'Susun Algoritma mu secara visual disini',\r\n        },\r\n        {\r\n            element: '.welcome-2',\r\n            intro: 'Perhatikan hasil konversi kode program dan kompilasi kode secara online disini',\r\n        },\r\n        {\r\n            element: '.welcome-3',\r\n            intro: 'Melalui tombol-tombol dibawah ini, kamu bisa membagikannya ke teman mu, meng-unduh kode program mu, atau melakukan kompilasi online',\r\n        },\r\n    ];\r\n\r\n    const onExit = () => {\r\n        setStepsEnabled(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Steps\r\n                enabled={stepsEnabled}\r\n                steps={steps}\r\n                initialStep={initialStep}\r\n                onExit={onExit}\r\n            />\r\n\r\n            <Grid container spacing={0}>\r\n                <Grid className=\"welcome-1\" item xs={12} md={7} style={{ height: \"86.8vh\" }}>\r\n                    <Blockly getCode={handleGetCode} onReady={onVisualSpaceReady} />\r\n                </Grid>\r\n                <Grid item xs={12} md={5} style={{ height: \"81vh\" }}>\r\n                    <Grid container justify={\"center\"}\r\n                        alignItems={\"center\"} alignContent={\"center\"}>\r\n                        <Grid className=\"welcome-2\" item xs={12} style={{ height: \"100%\" }}>\r\n                            <MiscellaneousTool code={code} />\r\n                        </Grid>\r\n                        <Grid className=\"welcome-3\" item xs={11} style={{ left: -10 }}>\r\n                            <ToolsButton code={code} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style={{\r\n                backgroundColor: \"#3f51b5\",\r\n                display: ' flex',\r\n                minHeight: ' 7vh',\r\n                flexDirection: ' column'\r\n            }}>\r\n                <Grid item xs={12}>\r\n                    {\r\n                        isWidthUp('md', props.width) ?\r\n                            <Typography variant=\"caption\" align={\"center\"} style={{ paddingTop: 10, paddingBottom: 10 }}>\r\n                                <a style={{ color: 'white', textDecoration: 'none' }} target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\" href=\"https://arrokhs.wordpress.com/about-me/\">\r\n                                    Arrokh © 2018-2019. All right reserved.\r\n                                </a>\r\n                            </Typography>\r\n                            : null\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(Playground));"],"sourceRoot":""}