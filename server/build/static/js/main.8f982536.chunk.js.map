{"version":3,"sources":["components/layout/SignedInLinks.jsx","components/layout/Navbar.jsx","App.js","serviceWorker.js","config/firebaseConfig.jsx","store/auth/authReducer.jsx","store/project/projectReducer.jsx","store/domain/domainReducer.jsx","store/api/apiReducer.jsx","store/root/rootReducer.jsx","index.js"],"names":["SignedInLinks","state","anchorEl","handleMenu","e","setState","currentTarget","handleClose","route","this","open","Boolean","classes","props","className","resetLinkStyle","to","color","aria-owns","undefined","aria-haspopup","onClick","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","Component","withStyles","textDecoration","root","flexGrow","grow","menuButton","marginLeft","marginRight","resetLinkStyleInMenu","position","variant","alt","src","style","maxHeight","Welcome","lazy","Playground","ManualBook","About","App","handleKeys","onKeyEvent","localStorage","removeItem","toast","autoClose","fallback","exact","path","component","from","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","initState","authError","authReducer","action","type","console","log","err","message","project","playground","code","projectReducer","data","base","server","isDevelopmentMode","domainReducer","host","split","apiReducer","courses","course","payload","rootReducer","combineReducers","firesotre","firestoreReducer","firebaseReducer","auth","domain","api","getItem","setItem","UUIDV4","ReactGA","initialize","debug","pageview","pathname","search","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirebase","getFirestore","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","then","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f982536.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {IconButton, Menu, MenuItem} from '@material-ui/core';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass SignedInLinks extends Component {\r\n    state = {\r\n        anchorEl: null\r\n    }\r\n\r\n    handleMenu = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget\r\n        });\r\n    };\r\n\r\n    handleClose = route => {\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {anchorEl} = this.state;\r\n        const open = Boolean(anchorEl);\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <NavLink className={classes.resetLinkStyle} to=\"/playground\">\r\n                    <Button color=\"inherit\">Playground</Button>\r\n                </NavLink>\r\n                <IconButton\r\n                    aria-owns={open ? \"menu-appbar\" : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                    onClick={this.handleMenu}\r\n                >\r\n                    <AccountCircle/>\r\n                </IconButton>\r\n\r\n                <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"right\"\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"right\"\r\n                    }}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <NavLink className={classes.resetLinkStyle} to=\"/\">\r\n                        <MenuItem onClick={this.handleClose}>\r\n                            Home\r\n                        </MenuItem>\r\n                    </NavLink>\r\n                    <NavLink className={classes.resetLinkStyle} to=\"/manual-book\">\r\n                        <MenuItem onClick={this.handleClose}>\r\n                            Manual Book\r\n                        </MenuItem>\r\n                    </NavLink>\r\n                    <NavLink className={classes.resetLinkStyle} to=\"/about\">\r\n                        <MenuItem onClick={this.handleClose}>\r\n                            About\r\n                        </MenuItem>\r\n                    </NavLink>\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst styles = {\r\n    resetLinkStyle: {\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SignedInLinks);","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography className={classes.grow} color=\"inherit\" variant=\"h6\">\r\n                        <NavLink className={classes.resetLinkStyle} to=\"/\">\r\n                            <img alt={\"NEMU Logo\"} src={\"images/logo-nemu-min.png\"} style={{maxHeight: 25, marginRight: 5}}/>\r\n                            <span>NEMU</span>\r\n                        </NavLink>\r\n                    </Typography>\r\n                    <SignedInLinks style={classes}/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20\r\n    },\r\n    resetLinkStyle: {\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    },\r\n    resetLinkStyleInMenu: {\r\n        textDecoration: 'none',\r\n        color: 'black'\r\n    }\r\n};\r\nexport default withStyles(styles)(Navbar);","import React, { lazy, Suspense } from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Navbar from './components/layout/Navbar';\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { toast } from 'react-toastify';\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\n// import Welcome from './scenes/welcome/Welcome';\r\n// import Playground from './scenes/playground/Playground';\r\n// import ManualBook from \"./scenes/manual-book/ManualBook\";\r\n// import About from \"./scenes/about/About\";\r\n\r\nconst Welcome = lazy(() => import('./scenes/welcome/Welcome'));\r\nconst Playground = lazy(() => import('./scenes/playground/Playground'));\r\nconst ManualBook = lazy(() => import('./scenes/manual-book/ManualBook'));\r\nconst About = lazy(() => import('./scenes/about/About'));\r\n\r\nconst App = (props) => {\r\n\r\n    const keyHandler = () => {\r\n        localStorage.removeItem(\"nemu-new\");\r\n        localStorage.removeItem(\"nemu-new-playground\");\r\n        localStorage.removeItem(\"nemu-new-manual-book\");\r\n\r\n        toast(\"Clear storage\", {\r\n            autoClose: 500,\r\n        })\r\n    };\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <KeyboardEventHandler handleKeys={['f2']} onKeyEvent={keyHandler} />\r\n            <Navbar />\r\n            <ToastContainer />\r\n            <Suspense fallback={<LinearProgress />}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Welcome} />\r\n                    <Route path=\"/playground\" component={Playground} />\r\n                    <Route path=\"/manual-book\" component={ManualBook} />\r\n                    <Route path=\"/about\" component={About} />\r\n                    <Redirect from='*' to='/' />\r\n                </Switch>\r\n            </Suspense>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import  firebase from  \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyApsY_OiAHcGkAZRWF1aSJ32NpewWdeOQI\",\r\n    authDomain: \"nemu-9e3ee.firebaseapp.com\",\r\n    databaseURL: \"https://nemu-9e3ee.firebaseio.com\",\r\n    projectId: \"nemu-9e3ee\",\r\n    storageBucket: \"nemu-9e3ee.appspot.com\",\r\n    messagingSenderId: \"500475853922\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n  firebase.firestore();\r\n\r\nexport default firebase;","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case \"SIGNUP_SUCCESS\":\r\n            console.log(\"authReducer:: Sign up success\");\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case \"SIGNUP_ERROR\":\r\n            console.log(\"authReducer:: Sign up error\");\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        case \"SIGNOUT_SUCCESS\":\r\n            console.log(\"authReducer:: Sign out success\");\r\n            return state;\r\n        case \"SIGNIN_SUCCESS\":\r\n            console.log(\"authReducer:: Sign in success\");\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case \"SIGNIN_ERROR\":\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","const initState= {\r\n    project: {\r\n        playground: {\r\n            code: \"empty\"\r\n        }\r\n    }\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case \"PLAYGROUND_CODE_UPDATE\":\r\n            console.log(\"Playground code updated\", action.data);\r\n            return state;\r\n        case \"PLAYGROUND_CODE_UPDATE_ERROR\":\r\n            console.log(\"Playground code updating error\", action.data);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer;","const initState = {\r\n    base: null,\r\n    server: null,\r\n    isDevelopmentMode: true\r\n}\r\n\r\nconst domainReducer = (state = initState, action) => {\r\n    if ((window.location.host.split(\":\")[0] === \"localhost\")) {\r\n        state.base = \"http://\" + window.location.host;\r\n        state.server = \"nodejs\";\r\n        state.isDevelopmentMode = true;\r\n    } else {\r\n        state.base = \"http://\" + window.location.host + \":80/\";\r\n        state.server = \"apache-php\";\r\n        state.isDevelopmentMode = false;\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nexport default domainReducer;","const initState = {\r\n    err: null\r\n};\r\n\r\nconst apiReducer = (state = initState, action) => {\r\n    // console.log(\"apiReducer::\\nactionType=\" + action.type);\r\n    // console.log(action.data);\r\n    switch (action.type) {\r\n        case \"COURSES_TAKE_BY_USER\":\r\n            return {\r\n                ...state,\r\n                courses: action.data\r\n            };\r\n        case \"COURSE_BY_URL\":\r\n            return {\r\n                ...state,\r\n                course: action.data\r\n            };\r\n        case \"GET_COURSE_OVERVIEW\":\r\n            return {\r\n                ...state,\r\n                payload: action.data\r\n            };\r\n        case \"GET_COURSE_DETAIL\":\r\n            return {\r\n                ...state,\r\n                payload: action.data\r\n            }\r\n        case \"TAKE_COURSE\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default apiReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport authReducer from '../auth/authReducer';\r\nimport projectReducer from '../project/projectReducer';\r\nimport domainReducer from '../domain/domainReducer';\r\n// import courseReducer from '../course/courseReducer';\r\nimport apiReducer from \"../api/apiReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    firesotre: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    domain: domainReducer,\r\n    // course: courseReducer,\r\n    api: apiReducer,\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport firebaseConfig from './config/firebaseConfig';\r\nimport rootReducer from './store/root/rootReducer';\r\nimport ReactGA from \"react-ga\";\r\nimport UUIDV4 from \"uuid/v4\";\r\n\r\n\r\n// Remove old UUID\r\nif (localStorage.getItem(\"nemu-uuid\") !== null ||\r\n    localStorage.getItem(\"nemu-uuid\") !== undefined) {\r\n    localStorage.removeItem(\"nemu-uuid\")\r\n}\r\n\r\n// ///////////////////////\r\n// SET STORAGE AS SESSIONS AND UUID\r\n\r\nif (!localStorage.getItem(\"nemu-uid\")) {\r\n    localStorage.setItem(\"nemu-uid\", UUIDV4())\r\n}\r\n\r\n// ///////////////////////\r\n\r\n\r\n\r\nReactGA.initialize('UA-138910675-1', {\r\n    debug: false\r\n});\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk.withExtraArgument({\r\n                getFirebase,\r\n                getFirestore\r\n            })\r\n        ),\r\n        reduxFirestore(firebaseConfig),\r\n        reactReduxFirebase(\r\n            firebaseConfig,\r\n            {\r\n                useFirestoreForProfile: true,\r\n                userProfile: \"users\",\r\n                attachAuthIsReady: true\r\n            }\r\n        )\r\n    )\r\n);\r\n\r\nstore.firebaseAuthIsReady\r\n    .then(() => {\r\n        ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n        serviceWorker.unregister();\r\n    });\r\n"],"sourceRoot":""}